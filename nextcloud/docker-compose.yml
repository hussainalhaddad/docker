services:
  search:
    image: elasticsearch:8.17.2
    env_file:
      - .env
    ports:
      - 9200:9200
      - 9300:9300
    restart: always
    volumes:
      - elastic:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    mem_limit: 2g  
    healthcheck:
      test: curl --fail http://localhost:9200/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s            

  db:
    image: postgres:alpine
    env_file:
      - .env    
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER} 
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s          

  app-init:
    image: nextcloud:fpm
    env_file:
      - .env    
    volumes_from:
      - app:rw    
    user: www-data
    init: true
    entrypoint: ["/bin/sh","-c"]
    command:
    - |
      php occ app:disable support
      php occ app:disable firstrunwizard
      php occ app:disable survey_client
      php occ app:install notify_push
      php occ app:install drawio
      php occ app:install whiteboard
      php occ app:install onlyoffice     
      php occ app:install files_fulltextsearch
      php occ app:install fulltextsearch
      php occ app:install fulltextsearch_elasticsearch
      php occ app:install theming_customcss
      php occ config:system:set default_phone_region --value ${PHONE_REGION}
      php occ config:system:set default_timezone --value '${TZ}'
      php occ config:system:set --type=boolean knowledgebaseenabled --value=false
      php occ maintenance:repair --include-expensive
      php occ background:cron
      php occ config:system:set opcache.enable --type=integer --value=1
      php occ config:system:set opcache.memory_consumption --type=integer --value=2048
      php occ config:system:set maintenance_window_start --type=integer --value=1
      php occ config:system:set integrity.check.disabled --type=boolean --value=true
      php occ config:system:set enable_previews --type=boolean --value=false
      php occ config:app:set whiteboard collabBackendUrl --value="http://${INTERNAL_IP}:3002"
      php occ config:app:set whiteboard jwt_secret_key --value="${JWT_SECRET}"      
      php occ config:app:set --value "http://${INTERNAL_IP}:9980/" onlyoffice DocumentServerUrl
      php occ config:app:set --value "${JWT_SECRET}" onlyoffice jwt_secret
      php occ config:app:set --value "false" onlyoffice customizationFeedback
      php occ config:app:set --value "false" onlyoffice customizationHelp
      php occ config:app:set --value "false" onlyoffice preview
      php occ config:app:set --value "false" onlyoffice versionHistory
      php occ config:app:set --value "false" onlyoffice customization_plugins
      php occ config:app:set --value "http://${INTERNAL_IP}:8090/" drawio DrawioUrl
      php occ config:app:set --value "yes" drawio DrawioOffline
      php occ config:app:set --value "off" drawio DrawioDarkMode
      php occ config:app:set --value "simple" drawio DrawioTheme
      php occ config:app:set --value "yes" drawio DrawioLibraries
      php occ config:app:set --value "no" drawio DrawioPreviews
      php occ config:app:set fulltextsearch enabled --value="yes"
      php occ config:app:set fulltextsearch search_platform --value="OCA\FullTextSearch_Elasticsearch\Platform\ElasticSearchPlatform"
      php occ config:app:set fulltextsearch types --value=""
      php occ config:app:set fulltextsearch_elasticsearch analyzer_tokenizer --value="standard"
      php occ config:app:set fulltextsearch_elasticsearch elastic_host --value="http://${INTERNAL_IP}:9200"
      php occ config:app:set fulltextsearch_elasticsearch elastic_index --value="nextcloud"
      php occ config:app:set fulltextsearch_elasticsearch enabled --value="yes"
      php occ config:app:set fulltextsearch_elasticsearch types --value=""
      php occ db:add-missing-indices
    depends_on:
      app:
        condition: service_healthy   

  app:
    image: nextcloud:fpm
    env_file:
      - .env    
    restart: always
    links:
      - db
      - redis
      - search
    volumes:
      - app:/var/www/html
      - custom-apps:/var/www/html/custom_apps
      - config:/var/www/html/config
      - data:/var/www/html/data
      - themes:/var/www/html/themes
    environment:
      - NC_skeletondirectory=
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_HOST_PORT=6379   
      - NEXTCLOUD_TRUSTED_DOMAINS=${INTERNAL_IP}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
    healthcheck:
      test: busybox netstat -an | grep :9000 || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
      redis:     
        condition: service_healthy 

  webserver:
    image: nginx
    ports:
      - 80:80
    links:
      - app
    volumes:
      - nginx:/etc/nginx/
    volumes_from:
      - app:rw 
    configs:
       - source: nginx.conf
         target: /etc/nginx/nginx.conf

    healthcheck:
      test: curl --fail http://localhost:80/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    depends_on:
      app:
        condition: service_healthy   

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis:/data  
      - /etc/localtime:/etc/localtime:ro  
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5           

  office:
    image: ghcr.io/thomisus/onlyoffice-documentserver-unlimited:8.1.3 #onlyoffice/documentserver #for cracked version, use: ghcr.io/thomisus/onlyoffice-documentserver-unlimited:8.1.3
    env_file:
      - .env
    restart: always 
    volumes:
      - oo-logs:/var/log/onlyoffice
      - oo-certs:/var/www/onlyoffice/Data
    ports:
      - 9980:80    
    environment:
      - TZ=${TZ}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_SERVER_HOST=redis
      - REDIS_SERVER_PORT=6379
    healthcheck:
      test: curl --fail http://localhost:80/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s  
    depends_on:
      redis:     
        condition: service_healthy           

  drawio:
    image: jgraph/drawio
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8090:8080
      - 3443:443  
    healthcheck:
      test: curl --fail http://localhost:8080/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s     

  whiteboard:
    image: ghcr.io/nextcloud-releases/whiteboard:release
    env_file:
      - .env    
    ports:
      - 3002:3002
    environment:
      - NEXTCLOUD_URL=http://${INTERNAL_IP}
      - JWT_SECRET_KEY=${JWT_SECRET}   

configs:
  nginx.conf:
    content: |
      worker_processes auto;

      error_log  /var/log/nginx/error.log warn;
      pid        /var/run/nginx.pid;


      events {
          worker_connections  1024;
      }


      http {
          include mime.types;
          default_type  application/octet-stream;
          types {
              text/javascript mjs;
              #application/wasm wasm;
          }

          log_format  main  '$$remote_addr - $$remote_user [$$time_local] "$$request" '
                            '$$status $$body_bytes_sent "$$http_referer" '
                            '"$$http_user_agent" "$$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;

          sendfile        on;
          #tcp_nopush     on;

          # Prevent nginx HTTP Server Detection
          server_tokens   off;

          keepalive_timeout  65;

          # Set the `immutable` cache control options only for assets with a cache busting `v` argument
          map $$arg_v $$asset_immutable {
              "" "";
          default ", immutable";
          }

          #gzip  on;

          upstream php-handler {
              server app:9000;
          }

          server {
              listen 80;

              # HSTS settings
              # WARNING: Only add the preload option once you read about
              # the consequences in https://hstspreload.org/. This option
              # will add the domain to a hardcoded list that is shipped
              # in all major browsers and getting removed from this list
              # could take several months.
              #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

              # set max upload size and increase upload timeout:
              client_max_body_size 512M;
              client_body_timeout 300s;
              fastcgi_buffers 64 4K;

              # The settings allows you to optimize the HTTP2 bandwidth.
              # See https://blog.cloudflare.com/delivering-http-2-upload-speed-improvements/
              # for tuning hints
              client_body_buffer_size 512k;

              # Enable gzip but do not remove ETag headers
              gzip on;
              gzip_vary on;
              gzip_comp_level 4;
              gzip_min_length 256;
              gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
              gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

              # Pagespeed is not supported by Nextcloud, so if your server is built
              # with the `ngx_pagespeed` module, uncomment this line to disable it.
              #pagespeed off;

              # HTTP response headers borrowed from Nextcloud `.htaccess`
              add_header Referrer-Policy                      "no-referrer"       always;
              add_header X-Content-Type-Options               "nosniff"           always;
              add_header X-Frame-Options                      "SAMEORIGIN"        always;
              add_header X-Permitted-Cross-Domain-Policies    "none"              always;
              add_header X-Robots-Tag                         "noindex, nofollow" always;
              add_header X-XSS-Protection                     "1; mode=block"     always;

              # Remove X-Powered-By, which is an information leak
              fastcgi_hide_header X-Powered-By;

              # Path to the root of your installation
              root /var/www/html;

              # Specify how to handle directories -- specifying `/index.php$$request_uri`
              # here as the fallback means that Nginx always exhibits the desired behaviour
              # when a client requests a path that corresponds to a directory that exists
              # on the server. In particular, if that directory contains an index.php file,
              # that file is correctly served; if it doesn't, then the request is passed to
              # the front-end controller. This consistent behaviour means that we don't need
              # to specify custom rules for certain paths (e.g. images and other assets,
              # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus
              # `try_files $$uri $$uri/ /index.php$$request_uri`
              # always provides the desired behaviour.
              index index.php index.html /index.php$$request_uri;

              # Rule borrowed from `.htaccess` to handle Microsoft DAV clients
              location = / {
                  if ( $$http_user_agent ~ ^DavClnt ) {
                      return 302 /remote.php/webdav/$$is_args$$args;
                  }
              }

              location = /robots.txt {
                  allow all;
                  log_not_found off;
                  access_log off;
              }

              # Make a regex exception for `/.well-known` so that clients can still
              # access it despite the existence of the regex rule
              # `location ~ /(\.|autotest|...)` which would otherwise handle requests
              # for `/.well-known`.
              location ^~ /.well-known {
                  # The rules in this block are an adaptation of the rules
                  # in `.htaccess` that concern `/.well-known`.

                  location = /.well-known/carddav { return 301 /remote.php/dav/; }
                  location = /.well-known/caldav  { return 301 /remote.php/dav/; }

                  location /.well-known/acme-challenge    { try_files $$uri $$uri/ =404; }
                  location /.well-known/pki-validation    { try_files $$uri $$uri/ =404; }

                  # Let Nextcloud's API for `/.well-known` URIs handle all other
                  # requests by passing them to the front-end controller.
                  return 301 /index.php$$request_uri;
              }

              # Rules borrowed from `.htaccess` to hide certain paths from clients
              location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$$|/)  { return 404; }
              location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

              # Ensure this block, which passes PHP files to the PHP process, is above the blocks
              # which handle static assets (as seen below). If this block is not declared first,
              # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php`
              # to the URI, resulting in a HTTP 500 error response.
              location ~ \.php(?:$$|/) {
                  # Required for legacy support
                  rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|.+\/richdocumentscode(_arm64)?\/proxy) /index.php$$request_uri;

                  fastcgi_split_path_info ^(.+?\.php)(/.*)$$;
                  set $$path_info $$fastcgi_path_info;

                  try_files $$fastcgi_script_name =404;

                  include fastcgi_params;
                  fastcgi_param SCRIPT_FILENAME $$document_root$$fastcgi_script_name;
                  fastcgi_param PATH_INFO $$path_info;
                  fastcgi_param HTTPS off;

                  fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
                  fastcgi_param front_controller_active true;     # Enable pretty urls
                  fastcgi_pass php-handler;

                  fastcgi_intercept_errors on;
                  fastcgi_request_buffering off;

                  fastcgi_max_temp_file_size 0;
              }

              # Serve static files
              location ~ \.(?:css|js|mjs|svg|gif|ico|jpg|png|webp|wasm|tflite|map|ogg|flac)$$ {
                  try_files $$uri /index.php$$request_uri;
                  add_header Cache-Control "public, max-age=15778463$$asset_immutable";
                  add_header Referrer-Policy                   "no-referrer"       always;
                  add_header X-Content-Type-Options            "nosniff"           always;
                  add_header X-Frame-Options                   "SAMEORIGIN"        always;
                  add_header X-Permitted-Cross-Domain-Policies "none"              always;
                  add_header X-Robots-Tag                      "noindex, nofollow" always;
                  add_header X-XSS-Protection                  "1; mode=block"     always;
                  access_log off;     # Optional: Don't log access to assets

                  location ~ \.wasm$$ {
                      default_type application/wasm;
                  }
              }

              location ~ \.(otf|woff2?)$$ {
                  try_files $$uri /index.php$$request_uri;
                  expires 7d;         # Cache-Control policy borrowed from `.htaccess`
                  access_log off;     # Optional: Don't log access to assets
              }

              # Rule borrowed from `.htaccess`
              location /remote {
                  return 301 /remote.php$$request_uri;
              }

              location / {
                  try_files $$uri $$uri/ /index.php$$request_uri;
              }
          }
      }


volumes:
  db:
  app:
  redis:
  oo-logs:
  oo-certs:
  custom-apps:
  config:
  data:
  themes:
  elastic:
  nginx:
